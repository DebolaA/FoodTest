// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QAFoodDb;

namespace QAFoodDb.Migrations
{
    [DbContext(typeof(QAFoodContext))]
    [Migration("20190116170406_createtablereviewdetails")]
    partial class createtablereviewdetails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QAFoodDb.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodDesc")
                        .HasMaxLength(500);

                    b.Property<string>("FoodName")
                        .HasMaxLength(50);

                    b.HasKey("FoodId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("QAFoodDb.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoodId");

                    b.Property<int>("ReviewCategory");

                    b.Property<int>("ReviewScore");

                    b.Property<DateTime>("ReviewedOn");

                    b.Property<int>("UserId");

                    b.HasKey("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("QAFoodDb.ReviewDetails", b =>
                {
                    b.Property<int>("ReviewDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AromaScore");

                    b.Property<int>("FlavourScore");

                    b.Property<int>("PresentationScore");

                    b.Property<int>("ReviewId");

                    b.Property<int>("TextureScore");

                    b.HasKey("ReviewDetailsId");

                    b.HasIndex("ReviewId")
                        .IsUnique();

                    b.ToTable("ReviewDetails");
                });

            modelBuilder.Entity("QAFoodDb.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasMaxLength(20);

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("QAFoodDb.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("FName")
                        .HasMaxLength(50);

                    b.Property<string>("LName")
                        .HasMaxLength(50);

                    b.Property<int?>("RoleId");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("QAFoodDb.Review", b =>
                {
                    b.HasOne("QAFoodDb.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QAFoodDb.ReviewDetails", b =>
                {
                    b.HasOne("QAFoodDb.Review", "Review")
                        .WithOne("ReviewDetails")
                        .HasForeignKey("QAFoodDb.ReviewDetails", "ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
